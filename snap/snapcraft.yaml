name: chip-tool 
summary: Chip Tool Matter Controller
description: Refer to https://snapcraft.io/chip-tool
adopt-info: connectedhomeip

confinement: strict
grade: stable
license: Apache-2.0

base: core22

architectures:
  - build-on: amd64
  - build-on: arm64

layout:
  /mnt:
    bind: $SNAP_COMMON/mnt

parts:
  connectedhomeip:
    plugin: nil
    build-environment:
      - TAG: v1.1.0.1
    override-pull: |
      # shallow clone the project its submodules
      git clone https://github.com/project-chip/connectedhomeip.git --depth=1 --branch=$TAG .
      scripts/checkout_submodules.py --shallow --platform linux
      
      # set the snap version
      craftctl set version=$TAG+snap
      
  zap:
    plugin: nil
    source: https://github.com/project-chip/zap.git
    source-depth: 1
    source-tag: v2023.05.04
    build-environment:
      - NODE_VERSION: v18.16.1
    build-packages:
      - build-essential 
      - libpango1.0-dev 
      - libjpeg-dev 
      - libgif-dev 
      - librsvg2-dev
      - wget
    override-build: |
      if [[ $SNAP_ARCH == "arm64" ]]; then
        # Install node+npm
        NODE=node-$NODE_VERSION-linux-$SNAP_ARCH
        wget https://nodejs.org/dist/$NODE_VERSION/$NODE.tar.xz
        tar -xJf $NODE.tar.xz
        export PATH=$PWD/$NODE/bin:$PATH

        # Install zap
        npm install
        
        # Define the environment needed for the app build
        echo "export PATH=$PWD/$NODE/bin:$PATH" > env
        echo "export ZAP_DEVELOPMENT_PATH=$PWD" >> env
        cat env
      fi
      
  chip-tool:
    after: [connectedhomeip, zap]
    plugin: nil
    build-environment:
      - ZAP_ENV: /root/parts/zap/build/env
    override-build: |
      # Setup ZAP paths; installed in the corresponding part
      test -f $ZAP_ENV && source $ZAP_ENV

      mkdir -p $CRAFT_PART_INSTALL/bin

      cd ../../connectedhomeip/src
      
      # The project writes its data to /tmp which isn't persisted.
      #
      # Setting TMPDIR env var when running the app isn't sufficient as 
      #  chip_[config,counter,factory,kvs].ini still get written under /tmp.
      # The chip-tool currently has no way of overriding the default paths to
      #   storage and security config files.
      #
      # Snap does not allow bind mounting a persistent directory on /tmp, 
      #  so we need to replace it in the source with another path, e.g. /mnt.
      # See the top-level layout definition which bind mounts a persisted
      #   directory within the confined snap space on /mnt.
      #
      # Replace storage paths:
      sed -i 's/\/tmp/\/mnt/g' src/platform/Linux/CHIPLinuxStorage.h
      # Replace key-value store path:
      sed -i 's/\/tmp/\/mnt/g' src/platform/Linux/CHIPPlatformConfig.h

      # To avoid activation errors, don't treat unset variables as error
      set +u 

      # Skip all non-core Python requirements:
      sed -i '/^-r requirements/ s/./#&/' ./scripts/setup/requirements.txt

      # Build the chip tool
      ./scripts/examples/gn_build_example.sh examples/chip-tool ./build-examples
      
      cp build-examples/chip-tool $CRAFT_PART_INSTALL/bin/
    build-packages:
      - git
      - gcc
      - g++
      - pkg-config
      - libssl-dev
      - libdbus-1-dev
      - libglib2.0-dev
      - libavahi-client-dev
      - ninja-build
      - python3-venv
      - python3-dev
      - python3-pip
      - unzip
      - libgirepository1.0-dev
      - libcairo2-dev
      - libreadline-dev
      - generate-ninja

apps:
  chip-tool:
    command: bin/chip-tool
    plugs:
      - network
      - bluez
      - avahi-observe
    environment:
      # Replace the path for chip-tool configuration files
      TMPDIR: "/mnt"

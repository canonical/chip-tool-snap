name: Build, test and publish snap

on:
  schedule:
    - cron: "20 2 * * 1"  # Monday morning 02:20 UTC
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allow manual trigger
  workflow_dispatch:

env:
  ARTIFACT_AMD64: chip-tool_${{ github.run_number}}_amd64
  ARTIFACT_ARM64: chip-tool_${{ github.run_number}}_arm64

jobs:
  build-amd64:
    outputs:
      snap: ${{ steps.snapcraft.outputs.snap }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build snap
        uses: snapcore/action-build@v1
        id: snapcraft

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_AMD64 }}
          path: ${{ steps.snapcraft.outputs.snap }}
          if-no-files-found: error
          
  test-amd64:
    needs: build-amd64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          lfs: true
      
      - name: Download locally built snap
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_AMD64 }}

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.*'
          cache: false

      - name: Run tests
        shell: bash
        working-directory: tests
        env:
          SKIP_TEARDOWN_REMOVAL: true
          LOCAL_SERVICE_SNAP: ../${{ needs.build-amd64.outputs.snap }}
        run: |
          go test -failfast -p 1 -timeout 30m -v

      - name: Upload snap logs
        if: always() 
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: tests/*.log

  publish-amd64:
    needs: [build-amd64, test-amd64]
    runs-on: ubuntu-latest
    steps:
      - name: Download locally built snap
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_AMD64 }}

      - uses: snapcore/action-publish@v1
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.STORE_LOGIN }}
        with:
          snap: ${{ needs.build-amd64.outputs.snap }}
          release: edge/ieng-1057

  build-arm64:
    # We do not start the long running arm64 build unless the amd64 tests have passed.
    needs: test-amd64
    outputs:
      snap: ${{ steps.snapcraft.outputs.snap }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Build snap
        uses: diddlesnaps/snapcraft-multiarch-action@v1
        id: snapcraft
        with:
          architecture: arm64

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_ARM64 }}
          path: ${{ steps.snapcraft.outputs.snap }}

  publish-arm64:
    needs: [build-arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Download locally built snap
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_ARM64 }}

      - uses: snapcore/action-publish@v1
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.STORE_LOGIN }}
        with:
          snap: ${{ needs.build-arm64.outputs.snap }}
          release: edge/ieng-1057
